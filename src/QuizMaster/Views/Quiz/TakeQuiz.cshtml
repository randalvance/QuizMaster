@model QuizPageViewModel
@inject QuizMaster.BBCode.BBCodeParser BBCodeParser
@{ 
    ViewBag.Title = "Quiz Time!";
    ViewBag.HeaderTitle = ViewBag.HideNext == null || !ViewBag.HideNext ? 
        $"Quiz of the Day {Model.QuizOfTheDayNumber}" : "Review";
    Layout = "_LayoutContentpage";
}

<form id="main-form" asp-controller="Quiz" asp-action="TakeQuiz" asp-route-sessionId="@Model.SessionId" method="post">

<div class="panel-group">

@{ 
    var firstTryPercentage = Model.QuizItemCount == 0 ? 0 : Math.Round(((double)Model.CorrectAnswerCount / Model.QuizItemCount) * 100);
    var retryPercentage = Model.QuizItemCount == 0 ? 0 : Math.Round(((double)Model.RetryAnswerCount / Model.QuizItemCount) * 100);
    var hasIncorrectAnswer = Model.Quizes.Any(q => q.IncorrectAnswers.Any());
}

<div id="quiz-result-information-wrapper">
    @if (hasIncorrectAnswer)
    {
        <div class="alert alert-danger" role="alert">
            <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
            <span class="sr-only">Error:</span>
            The red boxes are incorrect. You can try again or take the next quiz. It will no longer affect your initial score.
        </div>
    }
    else if (!Model.InitialLoad && !hasIncorrectAnswer)
    {
        <div class="alert alert-success" role="alert">
            <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
            <span class="sr-only">Error:</span>
            Congrats! You answered all correctly. You can take another quiz by clicking the button below.
        </div>
    }
    
    @if (!Model.InitialLoad && (ViewBag.HideNext == null || !ViewBag.HideNext))
    {
        <a asp-controller="Session" asp-action="GenerateSession" asp-route-numQuizTaken="@Model.QuizOfTheDayNumber" asp-route-fromTaker="true" class="btn btn-primary">Take Next Quiz</a>
    }
    @if (Model.InitialLoad && (ViewBag.HideNext == null || !ViewBag.HideNext))
    {
        <a asp-controller="Session" asp-action="SkipSession" asp-route-sessionId="@Model.SessionId" class="btn btn-danger">Skip This</a>
    }

    @if (!Model.InitialLoad)
    {
        <h3>Your Score</h3>
        <div id="score-container" class="row">
            <div id="first-score-container" class="score-display col-md-2 col-sm-4 col-xs-6">
            </div>
            @if (Model.IsRetry)
            {
                <div id="current-score-container" class="score-display col-md-2 col-sm-4 col-xs-6">
                </div>
            }
        </div>
        <div class="row">
            <div id="first-score-container" class="score-display col-md-2 col-sm-4 col-xs-6">
                <h4 class="text-center">First Try</h4>
            </div>
            @if (Model.IsRetry)
            {
                <div id="current-score-container" class="score-display col-md-2 col-sm-4 col-xs-6">
                    <h4 class="text-center">Current Try</h4>
                </div>
            }
        </div>
    }
</div>
@for (int i = 0; i < Model.Quizes.Count; i++)
{
    <div class="quiz-wrapper">
        <input type="hidden" asp-for="@Model.Quizes[i].QuizId" />
        <input type="hidden" asp-for="@Model.Quizes[i].Title" />
        <input type="hidden" asp-for="@Model.Quizes[i].Instructions" />

        <h3>@Model.Quizes[i].Title</h3>
        <p>@Html.Raw(Model.Quizes[i].Instructions)</p>
        <div>
        @for (int q = 0; q < Model.Quizes[i].Questions.Count; q++)
        {
            var question = Model.Quizes[i].Questions[q];

            <input type="hidden" asp-for="@Model.Quizes[i].Questions[q].QuestionId" />
            <div class="question-wrapper">
                <b>Question #@(q + 1)</b>
                <div class="question">
                    @Html.Raw(BBCodeParser.ToHtml(question.QuestionText))
                </div>
                <input type="hidden" asp-for="@Model.Quizes[i].Questions[q].QuestionText" />
                <div class="answer">
                    @for (int a = 0; a < question.Answers.Count; a++)
                    {
                        var answer = question.Answers[a];

                        <div class="form-group answer-item">
                            <label asp-for="@Model.Quizes[i].Questions[q].Answers[a].UserAnswer">Answer @(question.Answers.Count > 1 ? "#" + (a + 1) : "")</label>
                            @if (!Model.Quizes[i].QuizChoices.Any() && !Model.Quizes[i].Questions[q].Choices.Any())
                            {
                            <input class="form-control"
                                    asp-is-correct="@(!Model.InitialLoad && !Model.Quizes[i].IncorrectAnswers.Contains(answer.AnswerId))"
                                    asp-is-incorrect="@(!Model.InitialLoad && Model.Quizes[i].IncorrectAnswers.Contains(answer.AnswerId))"
                                    asp-for="@Model.Quizes[i].Questions[q].Answers[a].UserAnswer" />
                            }
                            else if (Model.Quizes[i].Questions[q].Choices.Any())
                            {
                                <select class="form-control answer-options
                                        @((!Model.InitialLoad && !Model.Quizes[i].IncorrectAnswers.Contains(answer.AnswerId)) ? "correct-answer" : "")
                                        @((!Model.InitialLoad && Model.Quizes[i].IncorrectAnswers.Contains(answer.AnswerId) ? "incorrect-answer": ""))"
                                        asp-for="@Model.Quizes[i].Questions[q].Answers[a].UserAnswer"
                                        asp-items="@Model.Quizes[i].Questions[q].Choices">
                                    <option></option>
                                </select>
                                <input type="hidden" class="answer-options-hidden" asp-for="@Model.Quizes[i].Questions[q].Answers[a].UserAnswer" />
                            }
                            else
                            {
                                <select class="form-control answer-options 
                                        @((!Model.InitialLoad && !Model.Quizes[i].IncorrectAnswers.Contains(answer.AnswerId)) ? "correct-answer" : "") 
                                        @((!Model.InitialLoad && Model.Quizes[i].IncorrectAnswers.Contains(answer.AnswerId) ? "incorrect-answer": ""))" 
                                        asp-for="@Model.Quizes[i].Questions[q].Answers[a].UserAnswer"
                                        asp-items="@Model.Quizes[i].QuizChoices">
                                    <option></option>
                                </select>
                                <input type="hidden" class="answer-options-hidden" asp-for="@Model.Quizes[i].Questions[q].Answers[a].UserAnswer" />
                            }
                            <span asp-validation-for="@Model.Quizes[i].Questions[q].Answers[a].UserAnswer" class="text-danger"></span>
                        </div>
                                
                        <input type="hidden" asp-for="@Model.Quizes[i].Questions[q].Answers[a].AnswerId" />
                        <input type="hidden" asp-for="@Model.Quizes[i].Questions[q].Answers[a].CorrectAnswer" />
                    }
                </div>
            </div>
        }
        </div>

            
        @if (Model.InitialLoad || Model.Quizes[i].IncorrectAnswers.Any())
        {
            <input type="submit" class="submit-answers-button btn btn-primary" value="@(Model.IsRetry ? "Resubmit Answers" : "Submit Answers")" />
        }

        @if (!Model.InitialLoad && Model.Quizes[i].IncorrectAnswers.Any())
        {
        <a asp-controller="Session" asp-action="ShowAnswers" asp-route-sessionId="@Model.SessionId" class="btn btn-danger pull-right">Show Answer</a>
        }
    </div>
       
 }
</div>

<input type="hidden" asp-for="@Model.SessionId" />
<input type="hidden" asp-for="@Model.InitialLoad" />
<input type="hidden" asp-for="@Model.CorrectAnswerCount" />
<input type="hidden" asp-for="@Model.QuizOfTheDayNumber" />
<input type="hidden" asp-for="@Model.CorrectAnswerCount" />
<input type="hidden" asp-for="@Model.QuizItemCount" />

</form>

@section scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script type="text/javascript" src="~/scripts/takeQuiz.js"></script>
    <script type="text/javascript">
        TakeQuizUtilities.initializeControls();
        TakeQuizUtilities.showScores(@(!Model.InitialLoad ? "true" : "false"), @(Model.IsRetry ? "true" : "false"), @Model.CorrectAnswerCount, @Model.RetryAnswerCount);
    </script>
}